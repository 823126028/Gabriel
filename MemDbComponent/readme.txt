1.为及时性较强的游戏提供一个将内存数据库(Map等)做的存入数据库的缓存中间件。

说明内容能够主要摘自类MemDbService注释
/**
 * 内存缓冲数据更新接口(将内存数据库作为主要存储对象，物理数据库只做落地)
 * 流程:
 * 		1.通过接口将POJO(id为key单个更新)提交到DB_OBJECT_MAP，以Class<?> 为key，(所有的同一个类型的数据在一个task里,Cache(操作同一个表))保证数据库和程序竞争最小，
 * 		    同时能最大化利用数据库的缓存。以conconcurrentLinked能保证不重复处理数据。(前提是输入的数据都是存储在内存
 * 		  数据库中的同一个对象)
 * 		2.指定的线程读取MAP(锁处理)，将数据传输到处理队列DbQueue，待数据库线程池处理。(处理报错的重试3次重新放入DbQueue等待处理)。
 * 		3.进程关闭的时候要让线程池等待所有的待执行MAP和DB Queue 全部执行完。
 * 		DBQUEUE可以分散到几个TASK里防止某个task时间太长
 * 		4.同时shutDOWN excutor的时候注意要wait一会儿